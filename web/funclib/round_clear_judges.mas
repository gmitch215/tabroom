<%args>
	$person
	$round        => undef
	$round_id     => undef
	$nobye        => undef
	$min_bracket  => undef
	$max_bracket  => undef
	$erase_chairs => undef
</%args>
<%init>

	$round = Tab::Round->retrieve($round_id) if $round_id;

	if ($round->published > 0) {
		$m->comp(
			 "/funclib/auto_backups.mas",
				 subject => "Round Judges Dumped",
				 round   => $round,
				 person  => $person,
		);
	}

	$round->setting('disaster_checked', 0);

	my $dbh = Tab::DBI->db_Main();

	my $limit;
	$limit .= " and panel.bracket > ".int($min_bracket) if (defined $min_bracket);
	$limit .= " and panel.bracket <= ".int($max_bracket) if (defined $max_bracket);

	if ($erase_chairs == 1) {
		$limit = 'and ballot.chair = 1';
	} elsif ($erase_chairs == 2) {
		$limit = 'and ballot.chair != 1';
	}

	my $zero_sth = $dbh->prepare("
		update ballot, panel
			set ballot.judge = NULL, ballot.audit = 0
		where ballot.panel = panel.id
		and panel.round = ?
		and panel.bye != 1
		$limit
	");

	my $scores_sth = $dbh->prepare("
		delete score.*
			from score, ballot, panel
		where 1=1
			and panel.round = ?
			and panel.id = ballot.panel
			and panel.bye != 1
			and ballot.id = score.ballot
			and score.tag NOT IN ('no_strike', 'strike')
			$limit
	");

	$zero_sth->execute($round->id);
	$scores_sth->execute($round->id);

	return;

</%init>
