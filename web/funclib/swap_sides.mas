<%args>
	$panel    => undef
	$panel_id => undef
	$person   => undef
</%args>
<%init>

	unless ($panel) {
		$panel = Tab::Panel->retrieve($panel_id);
	}

	unless ($panel) {
		$m->comp("/funclib/abort.mas",
			message => "No valid panel found for ID $panel_id"
		);
	}

	my %entries;

	foreach my $ballot (sort {$b->side <=> $a->side} $panel->ballots) {
		if ($ballot->entry > 0) {
			$entries{$ballot->side} = $ballot->entry;
		}
	}

	my @keys = sort {$b <=> $a} keys %entries;

	if (scalar @keys > 2) {
		$m->comp("/funclib/abort.mas",
			message => "There are more than 2 entries in that section which means 'sides' are meaningless.   Nothing changed."
		);
	}

	my $aff = $entries{$keys[0]};

	my $dbh = Tab::DBI->db_Main();

	# MySQL, you are infuriating sometimes.
	my $sth = $dbh->prepare("update ballot set side = 3 where panel = ? and entry = ?");
	$sth->execute($panel->id, $aff->id);

	$sth = $dbh->prepare("update ballot set side = 2 where panel = ? and entry != ?");
	$sth->execute($panel->id, $aff->id);

	$sth = $dbh->prepare("update ballot set side = 1 where panel = ? and entry = ?");
	$sth->execute($panel->id, $aff->id);
	$sth->finish();


	if ($person) {

		my $event = $panel->round->event;

		$m->comp("/funclib/log.mas",
			type        => "judge",
			tourn       => $event->tourn->id,
			panel       => $panel->id,
			description => "Swapped sides.  ".$aff->code." vs ".($entries{$keys[-1]} ? $entries{$keys[-1]}->code : "None"),
			event       => $event->id,
			person      => $person->id
		);
	}

	return;

</%init>
