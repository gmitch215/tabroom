<%args>
	$entry      => undef
	$school     => undef
	$admin      => undef
	$post_level => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $where;

	if (int($entry) > 0) {
		$where =  " where entry.id = ".int($entry)
	} elsif (int($school) > 0) {
		$where =  " where school.id = ".int($school)
	} else {
		return;
	}

	my $sth = $dbh->prepare("
        select
            entry.id, entry.code, entry.name,
            event.id, event.abbr, event.name, event.type,
            school.id, school.code, school.name, school.state,
            round.id, round.name, round.type, round.label, round.published,
			round.post_primary, round.post_secondary, round.post_feedback,
            panel.id, panel.letter, panel.flight, panel.bye,
            ballot.id, ballot.side, ballot.speakerorder, ballot.chair, ballot.bye, ballot.forfeit, ballot.tv,
			ballot.approved,
            judge.id, judge.code, judge.first, judge.last,
            score.id, score.tag, score.value, score.content, score.topic, score.speech, score.position,
            score_student.id, score_student.first, score_student.last,
            opponent.code, opponent.name,
            team_points.value,
            aff_label.value,
            neg_label.value,
            coach_wins.value,
            coach_points.value,
            coach_feedback.value,
            public_feedback.value,
			cbr.value cbr

        from (entry, entry_student es, student, event, round, panel,
			ballot USE INDEX(entry), score, school, judge
		)

			left join chapter_setting cbr
				on cbr.chapter = school.chapter
				and cbr.tag = 'coach_ballot_review'

            left join event_setting team_points on team_points.event = event.id and team_points.tag = 'team_points'

            left join event_setting aff_label on aff_label.event = event.id and aff_label.tag = 'aff_label'
            left join event_setting neg_label on neg_label.event = event.id and neg_label.tag = 'neg_label'
            left join round_setting coach_wins on coach_wins.round = round.id and coach_wins.tag = 'coach_wins'
            left join round_setting coach_points on coach_points.round = round.id
				and coach_points.tag = 'coach_points'
            left join round_setting coach_feedback on coach_feedback.round = round.id
				and coach_feedback.tag = 'coach_feedback'
            left join round_setting public_feedback on public_feedback.round = round.id
				and public_feedback.tag = 'public_feedback'

            left join student score_student on score.student = score_student.id
            left join ballot opp_ballot on opp_ballot.panel = panel.id and opp_ballot.entry != entry.id
            left join entry opponent on opponent.id = opp_ballot.entry

		$where
			and school.tourn   = event.tourn
            and school.chapter = student.chapter
            and event.id       = entry.event
            and entry.id       = es.entry
            and es.student     = student.id
            and event.id       = round.event
            and round.id       = panel.round
            and panel.id       = ballot.panel
            and ballot.id      = score.ballot
            and ballot.entry   = entry.id
			and ballot.judge   = judge.id
        group by score.id

	");

	$sth->execute();

	my %results;

	while (
		my (
			$id, $entry_code, $entry_name,
			$event_id, $event_abbr, $event_name, $event_type,
			$school_id, $school_code, $school_name, $school_state,
			$r_id, $round_name, $round_type, $round_label, $round_publish,
			$post_primary, $post_secondary, $post_feedback,
			$p_id, $panel_letter, $panel_flight, $panel_bye,
			$b_id, $ballot_side, $ballot_speakerorder, $ballot_chair, $ballot_bye, $ballot_forfeit, $ballot_tv,
			$ballot_approved,
			$j_id, $judge_code, $judge_first, $judge_last,
			$s_id, $score_tag, $score_value, $score_content, $score_topic, $score_speech, $score_position,
			$student_id, $student_first, $student_last,
			$opponent_code, $opponent_name,
			$team_points,
			$aff_label,
			$neg_label,
			$coach_wins,
			$coach_points,
			$coach_feedback,
			$public_feedback,
			$cbr
		) = $sth->fetchrow_array()
	) {

		# Permissions and publications

		if ($post_level) {
			if ($event_type eq "wudc"
				|| $event_type eq "speech"
				|| $event_type eq "debate"
			) {
				if ($score_tag eq "rank" || $score_tag eq "winloss") {
					next unless $post_primary >= $post_level;
				}
			} else {
				if ($score_tag eq "winloss") {
					next unless $post_primary >= $post_level;
				}
			}

			if ($event_type eq "wudc"
				|| $event_type eq "speech"
				|| $event_type eq "debate"
			) {

				if ($score_tag eq "point") {
					next unless $post_secondary >= $post_level;
				}

			} else {

				if ($score_tag eq "rank"
					|| $score_tag eq "point"
					|| $score_tag eq "refute"
					|| $score_tag eq "subpoints"
				) {
					next unless $post_secondary >= $post_level;
				}
			}

			if ($score_tag eq "rfd" || $score_tag eq "comments" || $score_tag eq "speech") {
				next unless $post_feedback >= $post_level;
			}
		}

		unless ($results{$id}{"code"}) {
			$results{$id}{"code"}         = $entry_code;
			$results{$id}{"name"}         = $entry_name;
			$results{$id}{"event_id"}     = $event_id;
			$results{$id}{"event_abbr"}   = $event_abbr;
			$results{$id}{"event_name"}   = $event_name;
			$results{$id}{"event_type"}   = $event_type;

			$results{$id}{"school_id"}    = $school_id;
			$results{$id}{"school_code"}  = $school_code;
			$results{$id}{"school_state"} = $school_state;
			$results{$id}{"school_name"}  = $school_name;
			$results{$id}{"school_cbr"}   = $cbr;
		}

		$results{$id}{"round"}{$r_id}{"number"} = $round_name;

		if ($round_label) {
			$results{$id}{"round"}{$r_id}{"name"} = $round_label;
		} else {
			$results{$id}{"round"}{$r_id}{"name"} = "Round ".$round_name;
		}

		$results{$id}{"round"}{$r_id}{"type"} = $round_type;
		$results{$id}{"round"}{$r_id}{"ballot"}{$b_id}{"panel"}  = $p_id;

		if ($cbr && $ballot_approved) {
			$results{$id}{"round"}{$r_id}{"ballot"}{$b_id}{"approved"}  = 1;
		}

		my $ballot = $results{$id}{"round"}{$r_id}{"ballot"}{$b_id};
		$ballot->{"letter"} = $panel_letter;
		$ballot->{"flight"} = $panel_flight;

		if ($panel_bye) {
			$results{$id}{"round"}{$r_id}{"bye"} = 1;
		} elsif ($ballot_bye) {
			$ballot->{"bye"} = 1;
		}

		if ($ballot_forfeit) {
			$ballot->{"forfeit"} = 1;
		}

		if ($event_type eq "wudc") {

			$results{$id}{"round"}{$r_id}{"position"} = "1G" if $ballot_speakerorder == 1;
			$results{$id}{"round"}{$r_id}{"position"} = "1O" if $ballot_speakerorder == 2;
			$results{$id}{"round"}{$r_id}{"position"} = "2G" if $ballot_speakerorder == 3;
			$results{$id}{"round"}{$r_id}{"position"} = "2O" if $ballot_speakerorder == 4;

		} elsif ($event_type eq "wsdc" || $event_type eq "debate") {

			$results{$id}{"round"}{$r_id}{"opp_code"} = $opponent_code;
			$results{$id}{"round"}{$r_id}{"opponent"} = $opponent_name;
			$results{$id}{"round"}{$r_id}{"side"}     = $ballot_side;

			if ($ballot_side == 1) {
				$results{$id}{"round"}{$r_id}{"side_name"} = $aff_label;
			} elsif ($ballot_side == 2) {
				$results{$id}{"round"}{$r_id}{"side_name"} = $neg_label;
			}
		}

		$results{$id}{"round"}{$r_id}{"order"} = $ballot_speakerorder;
		$ballot->{"chair"} = $ballot_chair;
		$ballot->{"tv"}    = $ballot_tv;

		if ($ballot_side == 1) {
			$ballot->{"side_name"} = $aff_label;
		} elsif ($ballot_side == 2) {
			$ballot->{"side_name"} = $neg_label;
		}

		$ballot->{"judge_id"}   = $j_id;
		$ballot->{"judge_name"} = $judge_first." ".$judge_last;
		$ballot->{"judge_last"} = $judge_last;
		$ballot->{"judge_code"} = $judge_code;

		if (
			$score_tag eq "subpoints"
			|| $score_tag eq "rfd"
			|| $score_tag eq "time"
			|| $score_tag eq "comments"
		) {
			next unless $score_content;
		}

		$results{$id}{"round"}{$r_id}{"tags"}{$score_tag}++;

		if ($score_tag eq "winloss" && $score_value != 1) {
			$score_value = "0";
		}

		$ballot->{"by_type"}{$score_tag} = $score_value;

		if ($student_id && (not defined $team_points)) {
			$ballot->{"by_student"}{$score_tag}++;
		}

		if ($student_id && (not defined $team_points)) {

			if ($score_tag eq "subpoints") {

				$ballot->{"student"}{$student_id}{$score_tag} = $score_content;

			} elsif ($score_content) {

				$ballot->{"student"}{$student_id}{$score_tag} = Tab::Utils::uncompress($score_content);

			} else {
				$ballot->{"student"}{$student_id}{$score_tag} = $score_value;
			}

			$ballot->{"student"}{$student_id}{"last"}     = $student_last;
			$ballot->{"student"}{$student_id}{"name"}     = $student_first." ".$student_last;

		} else {

			if ($score_tag eq "time") {
				$ballot->{"time"} = $score_content;
			} else {

				if ($score_content) {
					$ballot->{"score"}{$s_id}{"content"} = Tab::Utils::uncompress($score_content);
				}

				$ballot->{"score"}{$s_id}{"tag"}      = $score_tag;
				$ballot->{"score"}{$s_id}{"value"}    = $score_value;
				$ballot->{"score"}{$s_id}{"topic"}    = $score_topic;
				$ballot->{"score"}{$s_id}{"speech"}   = $score_speech;
				$ballot->{"score"}{$s_id}{"position"} = $score_position;
			}
		}
	}

	return %results;

</%init>
