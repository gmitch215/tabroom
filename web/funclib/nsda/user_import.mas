<%args>
	$username        => undef
	$password        => undef
	$nsda_id         => undef
	$person          => undef
	$person_settings => undef
</%args>
<%init>

	my $now = DateTime->now();

	if ($username && $password) {

		my $auth_token = '{ "username": "'.$username.'", "password": "'.$password.'" }';

		my ($sessionref, $raw) = $m->comp(
			"api_client.mas",
    		path => "/sessions/",
			post => $auth_token
		);

		if ($sessionref) {
			$nsda_id = $sessionref->{"person_id"};
		}

		unless ($nsda_id) {
			return "No valid user found with that username and password";
		}

		if ($person) {

			if ($person->nsda) {

				my ($personref, $jsonraw) = $m->comp("api_client.mas",
					path => "/persons/".$person->nsda
				);

				if ($personref && $personref->{"person_id"}) {
					return "Account ".$person->email." is already linked to the NSDA account #".$person->nsda." ".$personref->{email};
				}
			}

			my $other = Tab::Person->search(nsda => $nsda_id)->first;

			if ($other) {
				return "Account ".$other->email." is already linked to the NSDA ID #".$nsda_id;
			}

			$person->nsda($nsda_id);
			$person->update();

			return $person;
		}

	} elsif ($nsda_id) {

		# I already have an ID so just do the stuff below.

	} else {

		return "You must send a username and password, or a NSDA ID and be an admin";
	}

	my $already = Tab::Person->search(nsda => $nsda_id)->first;

	if ($already) {
		return $already;
	}

	# Make sure the NSDA ID hasn't been merge-changed
	my $new_id = $m->comp("/funclib/nsda/check_link.mas", nsda_id => $nsda_id);

	if ($new_id && $new_id != $nsda_id) {
		$nsda_id = $new_id;
		my $already = Tab::Person->search(nsda => $nsda_id)->first;

		if ($already) {
			return $already;
		}
	}

	my ($personref, $raw) = $m->comp(
		"api_client.mas",
		path => "/members/".$nsda_id
	);

	unless ($username) {
		$username = $personref->{'email'};
	}

	unless ($already) {

		$already = Tab::Person->search(email => $username)->first;

		if ($already) {
			$already->nsda($nsda_id);
			$already->update();
			return $already;
		}
	}

	unless ($personref && $personref->{"person_id"}) {
		return "No person record found for NSDA Member ID $nsda_id";
	}

	unless ($personref->{'email'}) {
		return "Person record for $nsda_id has no email address.  Data: email ".$personref->{"email"}." ID ".$personref->{"person_id"}.". Account not created.";
	}

	my $salt = $m->comp("/funclib/generate_randomstring.mas");
	my $sha2_hash = 0;
	$sha2_hash = crypt($password, '$6$' . $salt) if $password;

	my $newbie = Tab::Person->create({
		first    => $personref->{'first'},
		middle   => $personref->{'middle'},
		last     => $personref->{'last'},
		nsda     => $personref->{'person_id'},
		email    => $personref->{'email'},
		phone    => $personref->{'phone'},
		password => $sha2_hash
	});

	if ($personref->{addresses}) {

		my $address = shift @{$personref->{addresses}};

		$newbie->street($address->{street});
		$newbie->city($address->{city});
		$newbie->state($address->{state});
		$newbie->zip($address->{zip});
		$newbie->country($address->{country});

		$newbie->update();
	}

	my $ip .= "Requestor IP is ".$ENV{REMOTE_ADDR}.". ";
	$ip .= "Proxied IP is ".$ENV{"HTTP_X_FORWARDED_FOR"};
	$newbie->setting('creation', "Created via the NSDA User Import process from $ip at $now");

	return $newbie;

</%init>

