<%args>
	$string => undef
	$date   => undef
	$time   => undef
	$dt     => undef
	$tz     => "UTC"
</%args>
<%init>

	if ($dt) {

		$dt->set(second => 0);
		$dt->set_time_zone("UTC");
		unless ($tz eq "UTC") {
			$dt->set_time_zone($tz);
		}

		my %return = (
			date        => $dt->ymd('-'),
			epoch       => $dt->epoch,
			time        => $dt->hms(':'),
			murica_date => $dt->month_abbr." ".$dt->day.", ".$dt->year,
			murica      => $dt->hour_12.":".$dt->strftime("%M")." ".$dt->strftime('%p'),
			string      => DateTime::Format::MySQL->format_datetime($dt),
			tz          => $dt->time_zone,
			tzname      => Tab::tzname($tz),
			epoch       => $dt->epoch,
			csv         => $dt->year."-".sprintf("%02d",$dt->month)."-".sprintf("%02d",$dt->day)." ".sprintf("%02d",$dt->hour).":".sprintf("%02d",$dt->strftime('%M')),
			dt          => $dt
		);

		return \%return;

	} elsif ($string || $date) {

		unless ($string) {
			unless ($time) {
				$time = "00:00:00";
			}
			$date =~ s/\s+//g;
			$time =~ s/\s+//g;

			if (length($time) < 6) {
				$time .= ":00";
			}
			$string  = $date." ".$time;
		}

		my %return = ();

		my $dt = eval {
			return DateTime::Format::MySQL->parse_datetime($string);
		};

		if ($dt) {

			if ($ARGS{"input"}) {
				eval {
					$dt->set_time_zone($tz);
					$dt->set(second => 0);
				};

			} else {

				eval {
					$dt->set_time_zone("UTC");
					unless ($tz eq "UTC") {
						$dt->set_time_zone($tz);
					}
					$dt->set(second => 0);
				};
			}

			my %return = (
				date        => $dt->ymd('-'),
				day         => $dt->day_abbr,
				epoch       => $dt->epoch,
				time        => $dt->hms(':'),
				murica      => $dt->hour_12.":".$dt->strftime("%M")." ".$dt->strftime('%p'),
				murica_date => $dt->month_abbr." ".$dt->day.", ".$dt->year,
				string      => DateTime::Format::MySQL->format_datetime($dt),
				tz          => $tz,
				tzname      => Tab::tzname($tz),
				epoch       => $dt->epoch,
				csv         => $dt->year."-".sprintf("%02d",$dt->month)."-".sprintf("%02d",$dt->day)." ".sprintf("%02d",$dt->hour).":".sprintf("%02d",$dt->strftime('%M')),
				dt          => $dt
			);

			return \%return;
		}
	}

	return;

</%init>
