<%args>
	$session => undef
</%args>
<%init>

    use REST::Client;
	use MIME::Base64;

	my $ip;

	if ($ARGS{"update"}) {
		$ip = $session->ip;
	} elsif ($ARGS{"raw"}) {
		$ip = $ARGS{"ip"};
	} elsif ($ARGS{"update"}) {
		$ip = $ENV{HTTP_X_FORWARDED_FOR};
	} elsif ($session) {
		$ip = $session->ip;
	}

	return unless $ip;

	if (
		$session
		&& $session->ip eq $ip
		&& $session->geoip
		&& (not defined $ARGS{"update"})
		&& (not defined $ARGS{"relook"})
	) {
		return $session->location();
	}

	my $client = REST::Client->new(
		host => $Tab::url_prefix
	);

	my $auth_header = encode_base64($Tab::indexcards_user.":".$Tab::indexcards_key);

	$client->GET(
		$Tab::indexcards_url.'/ext/iplocation/'.$ip,
		{
			'Authorization' => "Basic $auth_header",
			'Accept'        => 'application/json',
			'Content-Type'  => 'application/json'
		}
	);

	my $record = eval {
		return JSON::decode_json($client->responseContent());
	};

	my $keys = eval {
		return keys %{$record};
	};

	unless ($keys) {
		undef $record;
	}

	if ($session) {
		$session->ip($ip);
		$session->location($record);
		$session->update();

		if ($ARGS{"update"}) {
			my $person = $session->person;
			$person->accesses($person->accesses +1);
			$person->update();
		}
	}

	return $record;

</%init>
