<%args>
	$person
	$chapter_id    => undef
	$student_id    => undef
	$student_email => undef
</%args>
<%init>

	unless ($chapter_id && ($student_id || $student_email)) {
		$m->comp("/funclib/abort.mas",
			message => "Chapter is $chapter_id And Student is $student_id"
		);
	}

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	my $student = Tab::Student->retrieve($student_id);

	unless ($m->comp("/funclib/chapter_admins.mas", chapter => $chapter, admin => $person)) {
		$m->comp("/funclib/abort.mas",
			message => "You do not have access to that chapter's competitor roster."
		);
	}

	$student_email =~ s/\s+/\n/g;  #whitespace ahoy!

	my $student_person = Tab::Person->search(
		email => $student_email
	)->first;

	my $err;

	unless ($student_person) {
		$err = "No Tabroom account with the email address ".$student_email." was found. ";
		$err .= "Try again, or create a new student record";
		$m->redirect("student_edit.mhtml?chapter_id=$chapter_id&err=$err");
	}

	my $other = Tab::Student->search(
		chapter => $chapter,
		person  => $student_person->id
	)->first;

	if ($other) {

		my $err = "That Tabroom account is already linked to the following student on your roster and cannot be ";
		$err .= " linked to another.  Try using the Deduplicate Students feature if you want to combine their records.";
		$m->redirect("student_edit.mhtml?chapter_id=$chapter_id&student_id=$other&err=$err");

	} elsif ($student_person && $student) {

		$student->person($student_person->id);
		$student->update();

		if ($student_person->nsda > 0) {
			$student = $m->comp("/funclib/nsda/student_link.mas",
				student => $student,
				person  => $person,
				nsda    => $student_person->nsda
			);
		}

	} elsif (not defined $student) {

		my $already = $chapter->students( person => $student_person )->first;

		if ($already) {
			$err =  "Tabroom account is already linked to ".$already->first." ".$already->last;
			$err .= " ".$already->grad_year." on this school roster.  New student record not created";
			$m->redirect("student_edit.mhtml?chapter_id=$chapter_id&err=$err");
		}

		my $now = DateTime->now;
		my $grad_year = $now->year + 4;

		$student = Tab::Student->create({
			first     => $student_person->first,
			last      => $student_person->last,
			chapter   => $chapter->id,
			novice    => 1,
			grad_year => $grad_year,
			person    => $student_person->id,
			retired   => 0
		});

		if ($student_person->nsda > 0) {
			$student = $m->comp("/funclib/nsda/student_link.mas", student => $student, person => $person);
		}
	}

	# Notify the student
	my $body = $person->first." ".$person->last." (".$person->email.") has added you on the ";
	$body .= "Tabroom.com system to the team roster for ".$chapter->name."\n";

	$body .= "You will now be able to get team emails and notices, and will be eligible ";
	$body .= "to sign up for tournaments through Tabroom at ".$Tab::url_prefix." if your ";
	$body .= "coaches use the self-signup system. \n\n";
	$body .= "If this is in error, you can remove this affilation by logging into ";
	$body .= "your Tabroom account at ".$Tab::url_prefix."\n\n".
	$body .= "If you need help, contact us at help\@tabroom.com.  Thanks!\n";

	my $subject = "[TabRoom] Added to the ".$chapter->name." team roster";

	my $from_string = $person->first." ".$person->last ."<roster_".$chapter->id.'@www.tabroom.com>';
	my $reply_to = $person->email;

	$m->comp("/funclib/send_notify.mas",
		from_string     => $from_string,
		reply_to        => $reply_to,
		ids             => [$student_person->id],
		subject         => $subject,
		ignore_no_email => 1,
		body            => $body
	);

	my $msg = "Competitor ".$student_person->first." ".$student_person->last." added to your roster with ID $student ";
	$msg .= "The student has been notified by email.";

	$m->redirect("student_edit.mhtml?chapter_id=$chapter_id&student_id=$student_id&msg=$msg");

</%init>
