<%args>
	$person
	$other_id       => undef
	$chapter_id     => undef
	$search_email   => undef
	$search_chapter => undef
	$search_last    => undef
	$search_first   => undef
	$judge_id       => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();
	my $sth;

	if ($other_id) {

		my $other = Tab::Person->retrieve($other_id);

		if ($other) {
			my @already = Tab::Conflict->search(
				person     => $person->id,
				conflicted => $other_id
			);
			unless (@already) {
				Tab::Conflict->create({
					person     => $person->id,
					conflicted => $other_id,
					added_by   => $person->id,
				});
			}
		}
	}

	if ($chapter_id) {

		my $chapter = Tab::Chapter->retrieve($chapter_id);

		if ($chapter) {

			my @already = Tab::Conflict->search(
				person  => $person->id,
				chapter => $chapter_id
			);

			unless (@already) {

				Tab::Conflict->create({
					person   => $person->id,
					chapter  => $chapter_id,
					added_by => $person->id,
				});

			}
		}
	}

	my $upcoming_judges;

	my $upcoming_judge_sth = $dbh->prepare("
		select
			judge.id, category.abbr,
			school.name school_name,
			tourn.id tourn, tourn.name tourn_name,
			CONVERT_TZ(tourn.start, '+00:00', tourn.tz) tourn_start
		from (judge, category, tourn)
			left join school on judge.school = school.id
		where tourn.end > NOW()
			and tourn.id = category.tourn
			and category.id = judge.category
			and judge.person = ?
	");

	$upcoming_judge_sth->execute($person->id);
	$upcoming_judges = $upcoming_judge_sth->fetchall_hash();

	my $upcoming_entry_sth = $dbh->prepare("
		select
			entry.id, tourn.id tourn
			from entry, entry_student es, event, tourn, student
		where tourn.end > NOW()
			and tourn.id = event.tourn
			and event.id = entry.event
			and entry.id = es.entry
			and es.student = student.id
			and student.person = ?
	");

	$upcoming_entry_sth->execute($person->id);
	my $upcoming_entries = $upcoming_entry_sth->fetchall_hash();

	foreach my $ref (@{$upcoming_judges}, @{$upcoming_entries}) {
		$m->comp("/funclib/person_conflict.mas",
			person  => $person,
			entered => $person,
			tourn   => $ref->{tourn}
		);
	}

	my $limit;
	my $chapters;
	my $persons;

	my @params;

	if ($search_email && $search_last) {
		$limit =  " where person.last LIKE ? and person.email LIKE ? ";
		push @params, $search_last.'%';
		push @params, $search_email.'%';
	} elsif ($search_email) {
		$limit =  " where person.email LIKE ? ";
		push @params, $search_email.'%';
	} elsif ($search_last) {
		$limit =  " where person.last LIKE ? ";
		push @params, $search_last.'%';
	}

	my $err;

	if ($search_first ) {
		if ($limit) {
			$search_first =~ s/\'/\\\'/g;
			$limit .=  " and person.first LIKE '$search_first%' ";
		} else {
			$err = "You must supply either a last name or an email; you cannot only search by first name. Too many results are returned and the system goes boom!";
		}
	}

	if ($search_chapter) {

		$sth = $dbh->prepare("
		    select
				chapter.id, chapter.name, chapter.state, chapter.country,
				(
					select GROUP_CONCAT(tourn.name SEPARATOR ',')
						from tourn, school
					where school.chapter = chapter.id
						and school.tourn = tourn.id
						and tourn.end > NOW()
					order by tourn.start
					limit 5
				) as tourns,
				GROUP_CONCAT(CONCAT(admin.first,' ',admin.last) SEPARATOR ',') admins

			from chapter
				left join permission on chapter.id = permission.chapter
				left join person admin on admin.id = permission.person
			where chapter.name like ?
				group by chapter.id
		");

		$sth->execute($search_chapter.'%');
		$chapters = $sth->fetchall_hash();
		$sth->finish();
	}

	my @existings = Tab::Conflict->search(
		person => $person->id
	);

	my %no_chapter;
	my %no_person;

	foreach my $existing (@existings) {
		if ($existing->conflicted > 0) {
			$no_person{$existing->conflicted}++;
		}

		if ($existing->chapter > 0) {
			$no_chapter{$existing->chapter}++;
		}
	}

	if ($limit) {

		$sth = $dbh->prepare("

			select
				person.id, person.email, person.first, person.last,
				count(student.id) as students,
				count(cj.id) as judges,
				GROUP_CONCAT(distinct(chapter.name) SEPARATOR ',') as chapters,
				GROUP_CONCAT(distinct(jchapter.name) SEPARATOR ',') as jchapters,
				CONVERT_TZ(person.last_access, '+00:00', person.tz) last_access
			from person
				left join student on student.person = person.id
				left join chapter_judge cj on cj.person = person.id
				left join chapter on student.chapter = chapter.id
				left join chapter jchapter on cj.chapter = jchapter.id

			$limit
			group by person.id
			order by person.last_access DESC
		");

		$sth->execute(@params);
		$persons = $sth->fetchall_hash();
	}

	my $next_tourn_sth = $dbh->prepare('
		select
			tourn.id, tourn.name,
			CONVERT_TZ(tourn.start, "+00:00", tourn.tz) tourn_start,
			category.abbr,
			strike.id strike
		from (tourn, school, category, judge)
			left join strike on strike.judge = judge.id and strike.school = school.id
				and conflict = 1
				and registrant = 1
		where school.chapter = ?
			and school.tourn = tourn.id
			and tourn.end > NOW()
			and tourn.id = category.tourn
			and judge.category = category.id
			and judge.person = ?
		group by school.id
		order by tourn.start
	');


</%init>

	<& menu.mas,
		person => $person,
		whoami => "conflicts"
	&>

	<div class="main">

		<h2>Standing Conflicts</h2>

		<p>
			These conflicts are meant to reflect a personal or professional
			relationship which means it is unfair for you to judge the other
			person; such as a relative, classmate, or a former student.  Do not
			use conflicts against judges or competitors you simply do not like;
			that's what strikes are for.
		</p>

		<p>
			These conflicts work to prevent one party from being judged by the
			other. They will not prevent two entries from competing against one
			another, which requires manual intervention.  Contact your
			tournament's officials if the latter situation arises.
		</p>

		<p class="bluetext semibold padvertmore bigger">
			Conflicts entered on Tabroom.com are <span class="inline semibold redtext italic">not confidential.</span>
		</p>

		<p class="padbottom">
			Any information you enter onto Tabroom is viewable by third
			parties, including the people you are conflicting.  If you have a
			conflict (or for that matter, any other information) you wish to
			keep confidential, you should contact the tournament officials
			directly instead of entering it here.
		</p>

		<p class="bigger semibold redtext">
			The judge &amp; entry both must have a Tabroom.com account linked
			to their tournament registrations for a standing conflict to work
			automatically. This system is not perfect; it is still your
			responsibility to ensure tournaments are aware of your conflicts!
		</p>

%		if ($upcoming_judges && scalar @{$upcoming_judges} > 0) {
			<h5 class="martopmore button">
				Tournament Specific Conflict Sheets
			</h5>

%			foreach my $judge (@{$upcoming_judges}) {

				<div class="row">
					<span class="twofifths semibold">
						<% $judge->{tourn_name} %>
					</span>

					<span class="tenth">
						<% $judge->{abbr} %>
					</span>

					<span class="third">
						<% $judge->{school_name} || "Tournament Judge" %>
					</span>

					<span class="fifth centeralign">
						<a
							href="judge_conflicts.mhtml?judge_id=<% $judge->{id} %>"
							class="buttonwhite bluetext thinnish fa fa-lg fa-list"
						></a>
					</span>
				</div>

%			}
%		}

%		if (@existings) {

			<h5 class="padtopmore">Program Conflicts</h5>

<%perl>
			foreach my $existing (@existings) {

				my $chapter = $existing->chapter;
				next unless $chapter > 0;

				$next_tourn_sth->execute($chapter->id, $person);
				my $next_tourns = $next_tourn_sth->fetchall_hash();
</%perl>
				<div class="row">

					<div class='full padvertless flexrow'>
						<span
							title = "<% $chapter->id %>"
							class = "quarter semibold biggish padleft"
						>
							<% $chapter->name %>
						</span>

						<span class="fiveeighths smallish flexrow">
							<span class="fifth semibold italic padleftmore">
								Chapter Admins:
							</span>

							<span class='fourfifths italic wrap'>
%								my $notfirst;
%								foreach my $admin ($chapter->admins) {
%									next unless $admin > 0;
%									$m->print(', ') if $notfirst++;
%									$m->print($admin->first." ".$admin->last);
%								}
							</span>
						</span>

						<span class="eighth centeralign padright">
							<a class="redtext buttonwhite fa fa-trash fa-sm nospace"
								href="conflict_rm.mhtml?conflict_id=<% $existing->id %>">
							</a>
						</span>
					</div>


%					if ($next_tourns && scalar @{$next_tourns} > 0) {
						<div class="full flexrow wrap top centeralign">
							<span class="threequarters leftalign">
								<div class="full semibold redtext smaller flexrow borderbottom">
									<span class="seveneighths">
										Future Overlapping Tournaments
									</span>
									<span
										class = "eighth smaller centeralign"
										title = "A green check means this conflict is registered at this tournament"
									>
										Conflicted?
									</span>
								</div>

%								foreach my $tourn (@{$next_tourns}) {
									<div class="full padleft flexrow smallish nowrap">
										<span class="threequarters">
											<% $tourn->{name} %>
										</span>
										<span class="eighth">
											(<% substr($tourn->{tourn_start}, 0, 4) %>)
										</span>
										<span class="eighth centeralign">
											<i
												class="fa fa-sm <% $tourn->{strike}
													? "greentext fa-check"
													: "redtext fa-times"
												%>"
											></i>
										</span>
									</div>
%								}
							</span>
						</div>
%					}

				</div>
%			}


<%perl>
			my $notfirst;

				foreach my $existing (@existings) {

					next if $existing->chapter > 0;
					my $conflicted = $existing->conflicted;
					next unless $conflicted;
					unless ($notfirst++) {
						$m->print('<h5>Individual Conflicts</h5>');
					}

					my $next_sth = $dbh->prepare('
						select
							tourn.id, tourn.name tourn_name,
							CONVERT_TZ(tourn.start, "+00:00", tourn.tz) tourn_start,
							category.abbr,
							strike.id strike
						from (tourn, category, judge, event, entry, entry_student es, student)
							left join strike on strike.judge = judge.id and strike.entry = entry.id
								and conflict = 1
								and registrant = 1
						where judge.person     = ?
							and judge.category = category.id
							and category.tourn = tourn.id
							and tourn.end > NOW()
							and event.tourn    = tourn.id
							and event.id       = entry.event
							and entry.id       = es.entry
							and es.student     = student.id
							and student.person = ?
						group by tourn.id
						order by tourn.start
					');

					$next_sth->execute($person, $conflicted);
					my $ejs = $next_sth->fetchall_hash();
					$next_sth->finish();

					$next_sth->execute($conflicted, $person);
					my $jes = $next_sth->fetchall_hash();
					$next_sth->finish();

</%perl>
					<div class="row bluebordertop">

						<div class='full padvertless flexrow ltborderbottom'>
							<span class="seveneighths semibold bigger bluetext padleft padvert">
								<% $conflicted->first." ".$conflicted->last %>
							</span>

							<span class="eighth rightalign padright">
								<a class="redtext buttonwhite fa fa-trash fa-sm"
									href="conflict_rm.mhtml?conflict_id=<% $existing->id %>">
								</a>
							</span>
						</div>

						<div class="full flexrow top grow">
%							if ($ejs && @{$ejs}) {
								<span class="half top">
									<div class="full semibold redtext flexrow smallish">
										<span class="fivesixths padleft">
											Future Overlapping Judging
										</span>
										<span
											class = "sixth smaller centeralign"
											title = "A green check means this conflict is registered at this tournament"
										>
											Conflict
										</span>
									</div>

%									foreach my $ej (@{$ejs}) {
										<div class="full smallish flexrow">
											<span class="fivesixths padleft">
												You judging <% $ej->{abbr} %> at <% $ej->{tourn_name} %>
											</span>
											<span class="sixth centeralign">
												<i class='fa fa-sm
													<% $ej->{strike} ? "greentext fa-check" : "redtext fa-times" %>
												'></i>
											</span>
										</div>
%									}
								</span>
%							}

%							if ($jes && @{$jes}) {
								<span class="half top">
									<div class="full semibold redtext flexrow smallish">
										<span class="fivesixths padleft">
											Future Overlapping Competing
										</span>
										<span
											class = "sixth smaller centeralign"
											title = "A green check means this conflict is registered at this tournament"
										>
											Conflict
										</span>
									</div>

%									foreach my $je (@{$jes}) {
										<div class="full smallish flexrow">
											<span class="fivesixths padleft">
												Them judging <% $je->{abbr} %> at <% $je->{tourn_name} %>
											</span>
											<span class="sixth centeralign">
												<i class='fa fa-sm
													<% $je->{strike} ? "greentext fa-check" : "redtext fa-times" %>
												'></i>
											</span>
										</div>
%									}
								</span>
%							}
						</div>
					</div>
%				}
%			}

			<h5 class="bluebordertop padtopmore martopmore semibold">Add Individual Conflict</h5>

%			if ($persons || $chapters) {

				<h6 class="centeralign martop nospace semibold padvertless">
					Search Results: <% $ARGS{"search_first"} %> <% $ARGS{'search_last'} %>
				</h6>

%				if ($persons) {

					<div class="ltyellow row smallish semibold flexrow">

						<span class="sixth semibold padleft">
							First
						</span>

						<span class="sixth semibold">
							Last
						</span>

						<span class="smallish fifth" title="Last time they accessed Tabroom">
							Last Tabroom Access
						</span>

						<span class="threetenths">
							Affiliated With
						</span>

						<span class="sixth rightalign">
						</span>
					</div>

<%perl>
					foreach my $person_ref (@{$persons}) {

						next if $no_person{$person_ref->{id}};

						my %chapters;

						foreach my $chapter ( (split(/\,/, $person_ref->{'chapters'})), (split(/\,/, $person_ref->{'jchapters'}))) {
							$chapters{$chapter}++;
						}
</%perl>
						<div class="row flexrow">

							<span class="sixth semibold padleft">
								<% $person_ref->{first} %>
							</span>

							<span class="sixth semibold">
								<% $person_ref->{last} %>
							</span>

							<span class="smallish fifth" title="Last time they accessed Tabroom">
								<& "/funclib/showdate.mas", string => $person_ref->{last_access}, format => "murica_short" &>
							</span>

							<span class="threetenths">
%								foreach my $chapter (sort {$a cmp $b} keys %chapters) {
									<div class="full nospace smallish padvertless">
										<% $chapter %>
									</div>
%								}
							</span>

							<span class="sixth rightalign padright">
								<a class="buttonwhite bluetext invert thin starthere"
									href="conflicts.mhtml?other_id=<% $person_ref->{id}%>"
								> Conflict </a>
							</span>
						</div>
%					}
%				}

%				if ($chapters) {

					<div class="ltyellow row smallish semibold martopmore flexrow">
						<span class="quarter semibold padleft">
							Program Name
						</span>

						<span class="third">
							Upcoming Tournaments
						</span>

						<span class="quarter">
							Admins
						</span>

						<span class="sixth rightalign">
						</span>
					</div>

%					foreach my $chapter (@{$chapters})	{

%						next if $no_chapter{$chapter->{id}};

						<div class="row bluebordertop">
							<span class="quarter semibold">
								<% $chapter->{'name'} %>
							</span>
							<span class="twenty semibold">
								<% $chapter->{'state'} ? $chapter->{'state'} : $chapter->{'country'} %>
							</span>

							<span class="twofifths">
%								my $counter;
%								foreach my $tourn (split(/\,/, $chapter->{'tourns'})) {
%									last if $counter++ > 4;
									<div class='full nospace padvertless smallish'>
										<% $tourn %>
									</div>
%								}
							</span>

							<span class="fifth">
%								foreach my $admin (split(/\,/, $chapter->{'admins'})) {
									<div class='full nospace padvertless smallish'>
										<% $admin %>
									</div>
%								}
							</span>

							<span class="tenth rightalign">
								<a class="buttonwhite bluetext invert thin"
									href="conflicts.mhtml?chapter_id=<% $chapter->{id} %>"
								> Conflict </a>
							</span>
						</div>
%					}
%				}

				<div class='full padvert'>
				</div>
%			}


%			if ($err) {
				<p class="centeralign explain redtext semibold"><% $err %></p>
%			}

			<form
				action = "conflicts.mhtml"
				method = "post"
			>

			<div class="row flexrow wrap">
				<span class="fourfifths">
					<div class="full flexrow">
						<span class="quarter padleft">
							Search By Name
						</span>

						<span class="threeeighths">
							<input
								type        = "text"
								name        = "search_first"
								placeholder = "First name"
								class       = "notfirst"
								value       = "<% $ARGS{"search_first"} %>"
							>
						</span>
						<span class="threeeighths padleft">
							<input
								type        = "text"
								name        = "search_last"
								placeholder = "Last name"
								class       = "notfirst"
								value       = "<% $ARGS{"search_last"} %>"
							>
						</span>
					</div>

					<div class="full flexrow ltbordertop">
						<span class="quarter padleft">
							or Email
						</span>
						<span class="threequarters">
							<input
								type        = "email"
								name        = "search_email"
								placeholder = "Search by email"
								class       = "notfirst"
								value       = "<% $ARGS{"search_email"} %>"
							>
						</span>
					</div>
				</span>

				<span class="fifth rightalign padrightmore">
					<input
						type  = "submit"
						value = "Search"
					>
				</span>
			</div>
		</form>

		<h6 class="martopmore padvert">
			Add School/Institutional Conflict
		</h6>

			<form
				action = "conflicts.mhtml"
				method = "post"
			>
				<div class="row flexrow">

					<span class="fifth padleft semibold">
						Institution Name
					</span>
					<span class="threefifths">
						<input
							type        = "text"
							name        = "search_chapter"
							class       = "notfirst"
							placeholder = "Search by name"
							value       = "<% $ARGS{"search_chapter"} %>"
						>
					</span>

					<span class="fifth rightalign padrightmore">
						<input
							type  = "submit"
							value = "Search"
						>
					</span>
				</div>
			</form>

	</div>
